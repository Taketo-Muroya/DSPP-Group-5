total10 <-
admin1_choropleth(country.name = "germany", df = total2016r,
title="Total Change of Crimes by State (2016)",
legend = "% Change", num_colors = 5)
knitr::opts_chunk$set(echo = TRUE)
library(geosphere)
library(ggplot2)
library(plotly)
library(dplyr)
library(ggthemes)
library(RColorBrewer)
library(sp)
library(maptools)
library(maps)
library(data.table)
library(choroplethr)
library(choroplethrAdmin1)
# Germany hate crime data
devtools::install_github("davben/arvig")
library(arvig)
data("arvig")
arvig = as.data.frame(arvig)
# Germany map
germany_shape_files = readShapePoly(
"Germany/VG250_1Jan2011_WGS84/VG250_Bundeslaender.shp")
# Crime Category and Sate
unique(arvig$category_en)
unique(arvig$state)
# Add monthly and annual variable
a <- mutate(arvig, ym = format(date, '%Y-%m'))
b <- mutate(arvig, y = format(date, '%Y'))
# Aggregate to time, category and state level
d1 = aggregate(a$ym, by=list(a$ym, a$category_en, a$state), FUN=length)
colnames(d1) = c("ym", "category", "state", "number")
# Aggregate to time and category level
d2 = aggregate(a$ym, by=list(a$ym, a$category_en), FUN=length)
colnames(d2) = c("ym", "category", "number")
d2$rate = 0
for (i in 2:nrow(d2)){
d2$rate[i] = 100*(d2$number[i] - d2$number[i-1])/d2$number[i-1]
}
for (i in c(44,46,93,135,180,188,196)){
d2$rate[i] = 0
}
d2 <- d2[c(-44,-45,-133,-134,-180:-187),]
# Aggregate to time level
d3 = aggregate(a$ym, by=list(a$ym), FUN=length)
colnames(d3) = c("ym", "number")
d3$rate = 0
for (i in 2:nrow(d3)){
d3$rate[i] = 100*(d3$number[i] - d3$number[i-1])/d3$number[i-1]
}
# Aggregate to state and category level
d4 = aggregate(d1$number, by=list(d1$category, d1$state), FUN=sum)
colnames(d4) = c("category", "state", "number")
d4 <- d4[c(-11,-18,-22,-25,-27,-54,-61,-77,-84,-93),]
# Aggregate to time and state level
d5 = aggregate(b$y, by=list(b$y, b$state), FUN=length)
colnames(d5) = c("year", "state", "number")
d5$rate = 0
for (i in 2:nrow(d5)){
d5$rate[i] = 100*(d5$number[i] - d5$number[i-1])/d5$number[i-1]
}
for (i in c(5,9,13,17,20,24,28,32,36,40,44,48,52,56,60)){
d5$rate[i] = 0
}
# Aggregate to month and state level
d6 = aggregate(a$ym, by=list(a$ym, a$state), FUN=length)
colnames(d6) = c("ym", "state", "number")
d6$rate = 0
for (i in 2:nrow(d6)){
d6$rate[i] = 100*(d6$number[i] - d6$number[i-1])/d6$number[i-1]
}
for (i in c(46,92,135,179,191,222,257,301,336,380,417,485,525,558)){
d6$rate[i] = 0
}
# Aggregate to state level
d7 = aggregate(a$date, by=list(a$state), FUN=length)
colnames(d7) = c("state", "number")
others <- read.csv('others.csv')
d7 <- cbind(d7, others)
d7 <- d7[,-3]
d7$crime_pc <- 1000 * d7$number / d7$population
# Aggregate to monthly state level
d8 = aggregate(a$date, by=list(a$ym, a$state), FUN=length)
colnames(d8) = c("ym", "state", "number")
# Aggregate to time, category and state level
d9 = aggregate(arvig$date, by=list(arvig$date, arvig$state), FUN=length)
colnames(d9) = c("date", "state", "number")
state_trans <- read.csv('state_trans2.csv')
d7$region <- state_trans$region
crime_per_capita <- data.frame(region=d7[,7], value=d7[,6])
total13 <-
admin1_choropleth(country.name = "germany", df = crime_per_capita,
title="Refugee Crimes per population by State",
legend = "crime / population(million)",
num_colors = 5)
total13
poverty <- data.frame(region=d7[,7], value=d7[,4])
total14 <-
admin1_choropleth(country.name = "germany", df = poverty,
title="Poverty level by State",
legend = "poverty level (%)",
num_colors = 5)
total14
AFD <- data.frame(region=d7[,7], value=d7[,5])
total15 <-
admin1_choropleth(country.name = "germany", df = AFD,
title="AFD vote by State",
legend = "AFD vote (%)",
num_colors = 5)
total15
result <- lm(crime_pc ~ poverty + AFD, data=d7)
summary(result)
total16 <- ggplot(data = d7, aes(x = crime_pc, y = poverty)) +
geom_point()+geom_smooth(color="blue", lwd=1, se=FALSE, method=lm)+
xlab("Refugee Crimes per population") + ylab("Poverty level") +
theme_economist() + theme(legend.position="none") +
ggtitle("Rrefugee crime and poverty level")
total16
total17 <- ggplot(data = d7, aes(x = crime_pc, y = AFD)) +
geom_point()+geom_smooth(color="blue", lwd=1, se=FALSE, method=lm)+
xlab("Refugee Crimes per population") + ylab("AFD vote rate") +
theme_economist() + theme(legend.position="none") +
ggtitle("Rrefugee crime and AFD vote")
total17
knitr::opts_chunk$set(echo = TRUE)
library(geosphere)
library(ggplot2)
library(plotly)
library(dplyr)
library(ggthemes)
library(RColorBrewer)
library(sp)
library(maptools)
library(maps)
library(data.table)
library(choroplethr)
library(choroplethrAdmin1)
# Germany hate crime data
devtools::install_github("davben/arvig")
library(arvig)
data("arvig")
arvig = as.data.frame(arvig)
# Germany map
germany_shape_files = readShapePoly(
"Germany/VG250_1Jan2011_WGS84/VG250_Bundeslaender.shp")
# Crime Category and Sate
unique(arvig$category_en)
unique(arvig$state)
# Add monthly and annual variable
a <- mutate(arvig, ym = format(date, '%Y-%m'))
b <- mutate(arvig, y = format(date, '%Y'))
# Aggregate to time, category and state level
d1 = aggregate(a$ym, by=list(a$ym, a$category_en, a$state), FUN=length)
colnames(d1) = c("ym", "category", "state", "number")
# Aggregate to time and category level
d2 = aggregate(a$ym, by=list(a$ym, a$category_en), FUN=length)
colnames(d2) = c("ym", "category", "number")
d2$rate = 0
for (i in 2:nrow(d2)){
d2$rate[i] = 100*(d2$number[i] - d2$number[i-1])/d2$number[i-1]
}
for (i in c(44,46,93,135,180,188,196)){
d2$rate[i] = 0
}
d2 <- d2[c(-44,-45,-133,-134,-180:-187),]
# Aggregate to time level
d3 = aggregate(a$ym, by=list(a$ym), FUN=length)
colnames(d3) = c("ym", "number")
d3$rate = 0
for (i in 2:nrow(d3)){
d3$rate[i] = 100*(d3$number[i] - d3$number[i-1])/d3$number[i-1]
}
# Aggregate to state and category level
d4 = aggregate(d1$number, by=list(d1$category, d1$state), FUN=sum)
colnames(d4) = c("category", "state", "number")
d4 <- d4[c(-11,-18,-22,-25,-27,-54,-61,-77,-84,-93),]
# Aggregate to time and state level
d5 = aggregate(b$y, by=list(b$y, b$state), FUN=length)
colnames(d5) = c("year", "state", "number")
d5$rate = 0
for (i in 2:nrow(d5)){
d5$rate[i] = 100*(d5$number[i] - d5$number[i-1])/d5$number[i-1]
}
for (i in c(5,9,13,17,20,24,28,32,36,40,44,48,52,56,60)){
d5$rate[i] = 0
}
# Aggregate to month and state level
d6 = aggregate(a$ym, by=list(a$ym, a$state), FUN=length)
colnames(d6) = c("ym", "state", "number")
d6$rate = 0
for (i in 2:nrow(d6)){
d6$rate[i] = 100*(d6$number[i] - d6$number[i-1])/d6$number[i-1]
}
for (i in c(46,92,135,179,191,222,257,301,336,380,417,485,525,558)){
d6$rate[i] = 0
}
# Aggregate to state level
d7 = aggregate(a$date, by=list(a$state), FUN=length)
colnames(d7) = c("state", "number")
others <- read.csv('others.csv')
d7 <- cbind(d7, others)
d7 <- d7[,-3]
d7$crime_pc <- 1000 * d7$number / d7$population
# Aggregate to monthly state level
d8 = aggregate(a$date, by=list(a$ym, a$state), FUN=length)
colnames(d8) = c("ym", "state", "number")
# Aggregate to time, category and state level
d9 = aggregate(arvig$date, by=list(arvig$date, arvig$state), FUN=length)
colnames(d9) = c("date", "state", "number")
# Total
total1 <- ggplot(d3) +
geom_bar(aes(x=ym, y=rate), fill="blue",
stat="identity", position="identity", alpha=0.5) +
geom_point(aes(x=ym, y=number),
stat="identity", position="identity", colour="blue") +
theme(legend.position = "top") +
labs(x="Time", y="Number of Crimes") + ggtitle("Total crimes") +
theme_hc() + theme(axis.text.x = element_text(angle=90, hjust=1))
total1
total2 <- ggplot(d2, aes(x = ym, y = number)) +
geom_line(aes(group=category, color=category), size=2) +
theme(legend.position = "top") +
labs(x="Time", y="Number of Crimes") +
ggtitle("Crimes by category") +
theme_hc() + theme(axis.text.x = element_text(angle=90, hjust=1))
total2
total2.5 <- ggplot() +
geom_path(data = germany_shape_files,
aes(x = long, y = lat, group = group)) +
stat_density2d(
aes(x=longitude, y=latitude, fill = ..level.., alpha = 0.25),
size = 0.01, bins = 30, data = b, geom = "polygon") +
ggtitle("Total crimes: 2014-2017")
total2.5
total3 <- ggplot() +
geom_path(data = germany_shape_files,
aes(x = long, y = lat, group = group)) +
stat_density2d(
aes(x=longitude, y=latitude, fill = ..level.., alpha = 0.25),
size = 0.01, bins = 30, data = subset(b, y <= 2015),
geom = "polygon") + ggtitle("Total crimes: 2014 & 2015")
total3
total4 <- ggplot() +
geom_path(data = germany_shape_files,
aes(x = long, y = lat, group = group)) +
stat_density2d(
aes(x=longitude, y=latitude, fill = ..level.., alpha = 0.25),
size = 0.01, bins = 30, data = subset(b, y >= 2016),
geom = "polygon") + ggtitle("Total crimes: 2016 & 2017")
total4
state_trans <- read.csv('state_trans.csv')
d5$region <- state_trans$region
all = aggregate(d5$number, by=list(d5$region), FUN=sum)
colnames(all) = c("region", "number")
totalall <- data.frame(region=all$region, value=all$number)
total4.5 <-
admin1_choropleth(country.name = "germany", df = totalall,
title="Total Number of Crimes by State",
legend = "Number", num_colors = 5)
total4.5
total2014 <- data.frame(region=subset(d5, year==2014)[,5],
value=subset(d5, year==2014)[,3])
total5 <-
admin1_choropleth(country.name = "germany", df = total2014,
title="Total Number of Crimes by State (2014)",
legend = "Number", num_colors = 5)
total5
total2015 <- data.frame(region=subset(d5, year==2015)[,5],
value=subset(d5, year==2015)[,3])
total6 <-
admin1_choropleth(country.name = "germany", df = total2015,
title="Total Number of Crimes by State (2015)",
legend = "Number", num_colors = 5)
total6
total2016 <- data.frame(region=subset(d5, year==2016)[,5],
value=subset(d5, year==2016)[,3])
total7 <-
admin1_choropleth(country.name = "germany", df = total2016,
title="Total Number of Crimes by State (2016)",
legend = "Number", num_colors = 5)
total7
total2017 <- data.frame(region=subset(d5, year==2017)[,5],
value=subset(d5, year==2017)[,3])
total8 <-
admin1_choropleth(country.name = "germany", df = total2017,
title="Total Number of Crimes by State (2017)",
legend = "Number", num_colors = 5)
total8
total2015r <- data.frame(region=subset(d5, year==2015)[,5],
value=subset(d5, year==2015)[,4])
total9 <-
admin1_choropleth(country.name = "germany", df = total2015r,
title="Total Change of Crimes by State (2015)",
legend = "% Change", num_colors = 5)
total9
total2016r <- data.frame(region=subset(d5, year==2016)[,5],
value=subset(d5, year==2016)[,4])
total10 <-
admin1_choropleth(country.name = "germany", df = total2016r,
title="Total Change of Crimes by State (2016)",
legend = "% Change", num_colors = 5)
total10
total2017r <- data.frame(region=subset(d5, year==2017)[,5],
value=subset(d5, year==2017)[,4])
total11 <-
admin1_choropleth(country.name = "germany", df = total2017r,
title="Total Change of Crimes by State (2017)",
legend = "% Change", num_colors = 5)
total11
total12 <- ggplot(d4) +
geom_bar(aes(x=state, y=number, group=category, fill=category),
stat="identity") + theme(legend.position = "top") +
labs(x="State", y="Number of Crimes") +
ggtitle("Crimes by State") +
theme_hc() + theme(axis.text.x = element_text(angle=90, hjust=1))
total12
state_trans <- read.csv('state_trans2.csv')
d7$region <- state_trans$region
crime_per_capita <- data.frame(region=d7[,7], value=d7[,6])
total13 <-
admin1_choropleth(country.name = "germany", df = crime_per_capita,
title="Refugee Crimes per population by State",
legend = "crime / population(million)",
num_colors = 5)
total13
poverty <- data.frame(region=d7[,7], value=d7[,4])
total14 <-
admin1_choropleth(country.name = "germany", df = poverty,
title="Poverty level by State",
legend = "poverty level (%)",
num_colors = 5)
total14
AFD <- data.frame(region=d7[,7], value=d7[,5])
total15 <-
admin1_choropleth(country.name = "germany", df = AFD,
title="AFD vote by State",
legend = "AFD vote (%)",
num_colors = 5)
total15
result <- lm(crime_pc ~ poverty + AFD, data=d7)
summary(result)
total16 <- ggplot(data = d7, aes(x = crime_pc, y = poverty)) +
geom_point()+
xlab("Refugee Crimes per population") + ylab("Poverty level") +
theme_economist() + theme(legend.position="none") +
ggtitle("Rrefugee crime and poverty level")
total16
total17 <- ggplot(data = d7, aes(x = crime_pc, y = AFD)) +
geom_point()+geom_smooth(color="blue", lwd=1, se=FALSE, method=lm)+
xlab("Refugee Crimes per population") + ylab("AFD vote rate") +
theme_economist() + theme(legend.position="none") +
ggtitle("Rrefugee crime and AFD vote")
total17
data201511 = subset(d8, ym=="2015-11")
others <- read.csv('others.csv')
others <- others[-5,]
others <- others[-11,]
data201511 <- cbind(data201511, others)
data201511 <- data201511[,-4]
data201511$crime_pc <- 1000 * data201511$number / data201511$population
state_trans <- read.csv('state_trans2.csv')
state_trans <- state_trans[-5,]
state_trans <- state_trans[-11,]
data201511$region <- state_trans$region
data201512 = subset(d8, ym=="2015-12")
others <- read.csv('others.csv')
others <- others[-5,]
data201512 <- cbind(data201512, others)
data201512 <- data201512[,-4]
data201512$crime_pc <- 1000 * data201512$number / data201512$population
state_trans <- read.csv('state_trans2.csv')
state_trans <- state_trans[-5,]
data201512$region <- state_trans$region
data201601 = subset(d8, ym=="2016-01")
others <- read.csv('others.csv')
data201601 <- cbind(data201601, others)
data201601 <- data201601[,-4]
data201601$crime_pc <- 1000 * data201601$number / data201601$population
state_trans <- read.csv('state_trans2.csv')
data201601$region <- state_trans$region
mix1 <- rbind(data201511, data201512, data201601)
mix1 <- mix1[order(mix1$state),]
mix1$rate = 0
for (i in 2:nrow(mix1)){
mix1$rate[i] =
100*(mix1$crime_pc[i] - mix1$crime_pc[i-1])/mix1$crime_pc[i-1]
}
crime201512 <- data.frame(
region=subset(mix1, ym=="2015-12")[,8],
value=subset(mix1, ym=="2015-12")[,7])
total18 <-
admin1_choropleth(country.name = "germany", df = crime201512,
title="Crimes per population by State (Dec.2015)",
legend = "crime / population(million)",
num_colors = 5)
total18
crime201601 <- data.frame(
region=subset(mix1, ym=="2016-01")[,8],
value=subset(mix1, ym=="2016-01")[,7])
total19 <-
admin1_choropleth(country.name = "germany", df = crime201601,
title="Crimes per population by State (Jan.2016)",
legend = "crime / population(million)",
num_colors = 5)
total19
rate201512 <- data.frame(
region=subset(mix1, ym=="2015-12")[,8],
value=subset(mix1, ym=="2015-12")[,9])
total20 <-
admin1_choropleth(country.name = "germany", df = rate201512,
title="Crimes per population growth by State (Dec.2015)",
legend = "crime per population growth (%)",
num_colors = 5)
total20
rate201601 <- data.frame(
region=subset(mix1, ym=="2016-01")[,8],
value=subset(mix1, ym=="2016-01")[,9])
total21 <-
admin1_choropleth(country.name = "germany", df = rate201601,
title="Crimes per population growht by State (Jan.2016)",
legend = "crime per population growth (%)",
num_colors = 5)
total21
aaa = subset(d9, date >= "2016-07-05")
bbb = subset(aaa, date <= "2016-07-18")
before2 = aggregate(bbb$number, by=list(bbb$state), FUN=sum)
colnames(before2) = c("state", "number")
others <- read.csv('others.csv')
others <- others[-5,]
before2 <- cbind(before2, others)
before2 <- before2[,-3]
before2$crime_pc <- 1000 * before2$number / before2$population
state_trans <- read.csv('state_trans2.csv')
state_trans <- state_trans[-5,]
before2$region <- state_trans$region
before22 <- data.frame(region=before2$region, value=before2$crime_pc)
total22 <- admin1_choropleth(country.name = "germany", df = before22, title="Crimes per population by State (Jul 5th - 18th, 2016)", legend = "crime / population(million)", num_colors = 5)
total22
ccc = subset(d9, date >= "2016-07-19")
ddd = subset(ccc, date <= "2016-08-02")
after2 = aggregate(ddd$number, by=list(ddd$state), FUN=sum)
colnames(after2) = c("state", "number")
others <- read.csv('others.csv')
others <- others[-5,]
after2 <- cbind(after2, others)
after2 <- after2[,-3]
after2$crime_pc <- 1000 * after2$number / after2$population
state_trans <- read.csv('state_trans2.csv')
state_trans <- state_trans[-5,]
after2$region <- state_trans$region
after22 <- data.frame(region=after2$region, value=after2$crime_pc)
total23 <- admin1_choropleth(country.name = "germany", df = after22, title="Crimes per population by State (Jul 19th - Aug 2nd, 2016)", legend = "crime / population(million)", num_colors = 5)
total23
aaa = subset(d9, date >= "2016-12-05")
bbb = subset(aaa, date <= "2016-12-18")
before2 = aggregate(bbb$number, by=list(bbb$state), FUN=sum)
colnames(before2) = c("state", "number")
others <- read.csv('others.csv')
others <- others[-5,]
others <- others[-5,]
others <- others[-9,]
others <- others[-9,]
before2 <- cbind(before2, others)
before2 <- before2[,-3]
before2$crime_pc <- 1000 * before2$number / before2$population
state_trans <- read.csv('state_trans2.csv')
state_trans <- state_trans[-5,]
state_trans <- state_trans[-5,]
state_trans <- state_trans[-9,]
state_trans <- state_trans[-9,]
before2$region <- state_trans$region
before22 <- data.frame(region=before2$region, value=before2$crime_pc)
total24 <- admin1_choropleth(country.name = "germany", df = before22, title="Crimes per population by State (Dec 5th - 18th, 2016)", legend = "crime / population(million)", num_colors = 5)
total24
ccc = subset(d9, date >= "2016-12-19")
ddd = subset(ccc, date <= "2017-01-02")
after2 = aggregate(ddd$number, by=list(ddd$state), FUN=sum)
colnames(after2) = c("state", "number")
others <- read.csv('others.csv')
others <- others[-5,]
others <- others[-5,]
others <- others[-10,]
after2 <- cbind(after2, others)
after2 <- after2[,-3]
after2$crime_pc <- 1000 * after2$number / after2$population
state_trans <- read.csv('state_trans2.csv')
state_trans <- state_trans[-5,]
state_trans <- state_trans[-5,]
state_trans <- state_trans[-10,]
after2$region <- state_trans$region
after22 <- data.frame(region=after2$region, value=after2$crime_pc)
total25 <- admin1_choropleth(country.name = "germany", df = after22, title="Crimes per population by State (Dec 19th, 2016 - Jan 2nd, 2017)", legend = "crime / population(million)", num_colors = 5)
total25
png("image/total1.png", width = 600, height = 450)
total1
dev.off()
png("image/total2.png", width = 600, height = 450)
total2
dev.off()
png("image/total2-5.png", width = 600, height = 450)
total2.5
dev.off()
png("image/total3.png", width = 600, height = 450)
total3
dev.off()
png("image/total4.png", width = 600, height = 450)
total4
dev.off()
png("image/total4-5.png", width = 600, height = 450)
total4.5
